{"version":3,"file":"particles-C20VyI6P.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../../node_modules/@tsparticles/engine/browser/Core/Particle.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../../node_modules/@tsparticles/engine/browser/Core/Particles.js","../../node_modules/@tsparticles/engine/browser/Core/Retina.js","../../node_modules/@tsparticles/engine/browser/Core/Container.js","../../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../../node_modules/@tsparticles/engine/browser/Core/Engine.js","../../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../../node_modules/@tsparticles/engine/browser/index.js","../../node_modules/@tsparticles/engine/browser/init.js","../../node_modules/@tsparticles/react/dist/Particles.js","../../node_modules/@tsparticles/react/dist/index.js","../../node_modules/@tsparticles/move-base/browser/Utils.js","../../node_modules/@tsparticles/move-base/browser/BaseMover.js","../../node_modules/@tsparticles/shape-circle/browser/Utils.js","../../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../../node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","../../node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","../../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../../node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","../../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../../node_modules/@tsparticles/basic/browser/index.js","../../node_modules/@tsparticles/plugin-hex-color/browser/index.js","../../node_modules/@tsparticles/plugin-hsl-color/browser/index.js","../../node_modules/@tsparticles/plugin-rgb-color/browser/index.js","../../node_modules/@tsparticles/move-base/browser/index.js","../../node_modules/@tsparticles/shape-circle/browser/index.js","../../node_modules/@tsparticles/updater-color/browser/index.js","../../node_modules/@tsparticles/updater-opacity/browser/index.js","../../node_modules/@tsparticles/updater-out-modes/browser/index.js","../../node_modules/@tsparticles/updater-size/browser/index.js","../../node_modules/@tsparticles/preset-stars/esm/options.js","../../node_modules/@tsparticles/preset-stars/esm/index.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { MoveDirection, OutMode } from \"@tsparticles/engine\";\nexport const options = {\n    background: {\n        color: \"#000\",\n    },\n    particles: {\n        number: {\n            value: 100,\n        },\n        move: {\n            direction: MoveDirection.none,\n            enable: true,\n            outModes: {\n                default: OutMode.out,\n            },\n            random: true,\n            speed: 0.1,\n            straight: false,\n        },\n        opacity: {\n            animation: {\n                enable: true,\n                speed: 1,\n                sync: false,\n            },\n            value: { min: 0, max: 1 },\n        },\n        size: {\n            value: { min: 1, max: 3 },\n        },\n    },\n};\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { options } from \"./options.js\";\nexport async function loadStarsPreset(engine, refresh = true) {\n    await loadBasic(engine, false);\n    await engine.addPreset(\"stars\", options, false);\n    await engine.refresh(refresh);\n}\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","percentDenominator","half","millisecondsToSeconds","originPoint","defaultTransform","randomColorValue","double","doublePI","Math","PI","generatedTrue","generatedFalse","canvasTag","rgbMax","hMax","sMax","lMax","hMin","sMin","hPhase","quarter","threeQuarter","defaultOpacity","decayOffset","identity","minStrokeWidth","lMin","rgbFactor","triple","sextuple","sNormalizedOffset","phaseNumerator","defaultRgbMin","defaultVelocity","defaultLoops","defaultTime","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","Array","isNull","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","cos","sin","coords3d","Error","origin","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","divTo","mult","multTo","normalize","rotate","setTo","v3d","subFrom","Vector","super","_random","random","_animationLoop","cb","requestAnimationFrame","idx","cancelAnimationFrame","getRandom","clamp","Number","EPSILON","num","min","max","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","degToRad","degrees","parseAlpha","input","endsWith","parseFloat","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","isSsr","window","document","safeMatchMedia","query","matchMedia","itemFromArray","array","index","useIndex","floor","arrayRandomIndex","isPointInside","point","size","offset","radius","direction","bounds","inside","bottom","top","height","left","right","width","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","destDict","map","executeOnSingleOrMultiple","obj","callback","item","itemFromSingleOrMultiple","initParticleNumericAnimationValue","options","pxRatio","valueRange","animationOptions","animation","res","delayTime","delay","enable","loops","maxLoops","count","time","decay","mode","increase","status","increasing","decrease","decreasing","autoStatus","auto","startValue","initialValue","getPosition","position","canvasSize","positionOrSize","percent","_","rest","getPositionOrSize","updateAnimation","particle","data","changeDirection","destroyType","delta","destroyed","velocity","factor","minValue","maxValue","destroy","checkDestroy","getFullScreenStyle","fn","cache","Map","args","JSON","stringify","has","get","result","set","memoize","zIndex","fullScreenStyle","createElement","style","margin","padding","borderWidth","toString","setProperty","AlterType","InteractivityDetect","EventType","DivType","ResponsiveMode","ThemeMode","CollisionMode","OutMode","LimitMode","InteractorType","ParticleOutType","RangeType","rangeColorToRgb","engine","color","colorToRgb","manager","colorManagers","values","handleRangeColor","fixedMin","fixedMax","getRandomRgbColor","startsWith","stringPrefix","parseString","stringToRgba","stringToRgb","handleColor","rangeColorToHsl","rgb","r1","g1","b1","s","rgbToHsl","hslToRgb","hsl","hNormalized","sNormalized","lNormalized","grayscaleValue","round","channel","temp1","temp2","temp3","phaseThird","red","green","blue","getStyleFromRgb","opacity","getStyleFromHsl","getHslFromAnimation","setColorAnimation","colorValue","colorAnimation","reduceFactor","speed","sync","updateColorValue","range","clear","context","dimension","clearRect","drawParticle","container","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","rotating","transformData","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","fillStyle","strokeWidth","lineWidth","stroke","strokeStyle","drawData","shape","drawer","shapeDrawers","beginPath","draw","pixelRatio","retina","shapeClose","closePath","shapeFill","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","newValue","setStyle","canvas","important","elementStyle","keys","Set","getPropertyValue","removeProperty","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","_a","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","_engine","particleStrokeColor","_initCover","async","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","Promise","resolve","reject","image","img","addEventListener","_coverImage","evt","src","_initStyle","element","_fullScreen","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_originalStyle","_mutationObserver","fullScreen","_standardSize","stdSize","_context","_generated","paint","stop","remove","drawAsync","spawning","getRadius","pfColor","getFillColor","psColor","getStrokeColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","attributeName","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","dataset","ariaHidden","clonedStyle","styleKey","styleValue","stylePriority","_b","getPropertyPriority","_d","_c","cloneStyle","standardSize","offsetHeight","offsetWidth","retinaSize","getContext","currentSize","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","load","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","selectors","circle","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","t","tmp","Modes","_container","interactors","interactor","loadModeOptions","Interactivity","modes","ManualParticle","Responsive","maxWidth","Infinity","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","horizontal","vertical","Collisions","absorb","bounce","maxSpeed","overlap","Effect","close","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","out","Spin","Move","attract","center","none","drift","gravity","path","outModes","spin","straight","vibrate","warp","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","SizeAnimation","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","collisions","groups","number","reduceDuplicates","group","hasOwn","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","getInteractors","external","particlesInteract","reset","fixOutMode","outMode","checkModes","indexOf","diameter","coord","maxCoord","setCb","Particle","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","outside","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","outType","override","unbreakable","inRange","slow","pathGenerator","shapeDrawer","particleDestroy","particleDestroyed","dispatchEvent","getMass","strokeColor","id","overrideOptions","effectClose","effectFill","lastPathTime","isRotating","misplaced","maxDistance","normal","ignoresResizeRatio","mainOptions","particlesOptions","effectType","shapeType","effectOptions","shapeOptions","availableEffects","availableShapes","effectData","loadEffectData","shapeData","loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","setLastZIndex","sides","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","mover","movers","particleInit","_e","_f","particleCreated","isInsideCanvas","isVisible","Point","BaseRange","Circle","contains","intersects","pos1","pos2","distPos","abs","Rectangle","rectangle","rectRange","pow","w","size2","w2","h2","QuadTree","capacity","_subdivide","i","fixedIndex","_subs","_divided","_points","insert","some","check","queryCircle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","forEach","addParticle","limitMode","currentCount","countToRemove","wait","update","condition","particlesInitialization","groupOptions","j","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","resizeFactor","particleUpdate","checkDelete","zArray","Retina","devicePixelRatio","ratio","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","radiusX","radiusY","clearClickHandlers","clearPlugins","mainArr","items","findIndex","containerDestroyed","refreshTime","frame","_drawAnimationFrame","export","supported","blob","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","containerInit","particlesSetup","_currentTheme","handle","containerPaused","needsUpdate","containerPlay","start","HTMLElement","containerStarted","_delayTimeout","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","all","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","version","addColorManager","addConfig","configAdded","addEasing","easing","getEasing","addEffect","addInteractor","interactorInitializer","addMover","moverInitializer","addParticleUpdater","updaterInitializer","addPathGenerator","addPlugin","getPlugin","addPreset","addShape","validType","validTypes","checkVersion","pluginVersion","dom","domItem","needsPlugin","params","url","fallback","response","fetch","ok","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","deleteCount","domContainer","getElementById","body","append","getDomContainer","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","setOnClickHandler","RotateDirection","GradientType","EasingType","tsParticles","useEffect","then","particlesLoaded","className","generate","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","spinOptions","spinPos","spinCenter","spinAcceleration","clockwise","counterClockwise","initSpin","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","spinClockwise","updateFunc","maxCanvasSize","halfMaxSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","drawCircle","ColorUpdater","hslColor","resColor","getHslAnimationFromHsl","hAnimation","sAnimation","lAnimation","ranges","updateColor","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","_parseString","hexColor","hexFixed","replace","exec","parseInt","HslIndexes","HslColorManager","hsla","rgbResult","hslaToRgba","OpacityUpdater","opacityOptions","opacityAnimation","BounceOutMode","split","includes","particleBounce","bounced","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","checkOutMode","_updateOutMode","RgbColorManager","rgbColor","SizeUpdater","sizeAnimation","loadBasic","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","loadStarsPreset"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]}